generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/db/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator zod {
  provider                         = "zod-prisma-types"
  output                           = "../src/lib/db/prisma-zod-types"
  useMultipleFiles                 = false // default is false
  createInputTypes                 = false // default is true
  createModelTypes                 = true // default is true
  addInputTypeValidation           = false // default is true
  addIncludeType                   = false // default is true
  addSelectType                    = false // default is true
  validateWhereUniqueInput         = false // default is true
  createOptionalDefaultValuesTypes = true // default is false
  createRelationValuesTypes        = false // default is false
  createPartialTypes               = false // default is false
  useDefaultValidators             = false // default is true
  coerceDate                       = true // default is true
  writeNullishInModelTypes         = false // default is false
}

model User {
  id            String          @id @default(cuid())
  email         String          @unique
  username      String          @unique
  imageUrl      String
  clerkId       String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  challenges    Challenge[]
  DailyProgress DailyProgress[]
}

model Challenge {
  id            String          @id @default(cuid())
  title         String
  wish          String
  dailyAction   String
  icon          String          @default("âœ…")
  note          String          @default("")
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  userId        String
  user          User            @relation(fields: [userId], references: [id])
  dailyProgress DailyProgress[]
}

model DailyProgress {
  id          String    @id @default(cuid())
  date        DateTime
  completed   Boolean
  imageUrl    String    @default("")
  note        String    @default("")
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ChallengeIdea {
  id          Int    @id @default(autoincrement())
  index       Int
  title       String
  wish        String
  dailyAction String
  description String
  sourceName  String @map("source_name")
  sourceLink  String @map("source_link")
}
